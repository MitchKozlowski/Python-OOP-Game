import pygame
pygame.init()

screenWidth = 1280
screenHeight = 720

window = pygame.display.set_mode((screenWidth, screenHeight))

pygame.display.set_caption("First Game")

walkRight = [pygame.image.load('R1.png'), pygame.image.load('R2.png'), pygame.image.load('R3.png'),
pygame.image.load('R4.png'), pygame.image.load('R5.png'), pygame.image.load('R6.png'),pygame.image.load('R7.png'),
pygame.image.load('R8.png'), pygame.image.load('R9.png')]
walkLeft = [pygame.image.load('L1.png'), pygame.image.load('L2.png'), pygame.image.load('L3.png'),
pygame.image.load('L4.png'), pygame.image.load('L5.png'), pygame.image.load('L6.png'), pygame.image.load('L7.png'),
pygame.image.load('L8.png'), pygame.image.load('L9.png')]
char = pygame.image.load('Jump.png')
backGround = pygame.image.load('Back.jpg')

clock = pygame.time.Clock()

class player(object):
    def __init__(self, x, y, width, height):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.vel = 10
        self.isJump = False
        self.jumpCount = 10
        self.left = False
        self.right = False
        self.walkCount = 0

    def draw(self, window):
        if self.walkCount + 1 >= 36:
            self.walkCount = 0

        if self.left:
            window.blit(walkLeft[self.walkCount//4], (self.x, self.y))
            self.walkCount += 1
        elif self.right:
            window.blit(walkRight[self.walkCount//4], (self.x, self.y))
            self.walkCount += 1
        else:
            window.blit(char, (self.x, self.y))


def redrawGameWindow():
    window.blit(backGround, (0, 0))
    man.draw(window)
    #pygame.draw.rect(window, (187, 27, 223), (x, y, width, height))    # Draw our character with random color values
    pygame.display.update()                                            # Refreshes the display to show change

# Mainloop
man = player(200, 555, 64, 64)
run = True
while run:
    clock.tick(36)

    for event in pygame.event.get() :   # Checks for any event like mouse click or keyboard press
        if event.type == pygame.QUIT:   # Makes it so closing the application works
            run = False

    keys = pygame.key.get_pressed()

    if keys[pygame.K_LEFT] and man.x > man.vel:  # Using vel rather than 0 cuz the character would be off the screen by Vel
        man.x -= man.vel
        man.left = True
        man.right = False
    elif keys[pygame.K_RIGHT] and man.x < screenWidth - man.width - man.vel:        # Movement Inputs
        man.x += man.vel
        man.right = True                                                  # Takes position and modifies it by velocity
        man.left = False
    else:
        man.right = False
        man.left = False
        man.walkCount = 0

    if not man.isJump:
        if keys[pygame.K_SPACE]:
            man.isJump = True               # Jumping is like quad. function :/
            man.right = False
            man.left = False
            man.walkCount = 0

    else:
        if man.jumpCount >= -10:
            neg = 1
            if man.jumpCount < 0:
                neg = -1
            man.y -= (man.jumpCount ** 2) / 2 * neg   # During 10 iterations, Move up y for jC value, Then down by neg
            man.jumpCount -= 1
        else:
            man.isJump = False
            man.jumpCount = 10

    redrawGameWindow()

pygame.quit()

